version: '3.8'

services:
  # Frontend - Nginx servant les fichiers statiques
  frontend:
    image: nginx:alpine
    container_name: tcdynamics-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - tcdynamics-network

  # Backend API - Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tcdynamics-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - tcdynamics-network

  # Redis pour le cache et les sessions (optionnel)
  redis:
    image: redis:alpine
    container_name: tcdynamics-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - tcdynamics-network

networks:
  tcdynamics-network:
    driver: bridge

volumes:
  redis-data: