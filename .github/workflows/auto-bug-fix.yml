name: Auto Bug Detection and Fix

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  bug-detection:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run linting and detect issues
        run: |
          echo "🔍 Running comprehensive bug detection..."

          # Run ESLint and capture issues
          npm run lint 2>&1 | tee lint-results.txt || true

          # Run TypeScript type checking
          npx tsc --noEmit 2>&1 | tee ts-errors.txt || true

          # Run tests and capture failures
          npm test 2>&1 | tee test-results.txt || true

          # Check for security vulnerabilities
          npm audit --audit-level=moderate 2>&1 | tee security-audit.txt || true

      - name: Analyze and categorize issues
        id: analyze
        run: |
          echo "📊 Analyzing detected issues..."

          # Count different types of issues
          LINT_ISSUES=$(grep -c "error\|warning" lint-results.txt || echo "0")
          TS_ISSUES=$(grep -c "error TS" ts-errors.txt || echo "0")
          TEST_FAILURES=$(grep -c "FAIL\|Error:" test-results.txt || echo "0")
          SECURITY_ISSUES=$(grep -c "vulnerabilities found" security-audit.txt || echo "0")

          echo "lint_issues=$LINT_ISSUES" >> $GITHUB_OUTPUT
          echo "ts_issues=$TS_ISSUES" >> $GITHUB_OUTPUT
          echo "test_failures=$TEST_FAILURES" >> $GITHUB_OUTPUT
          echo "security_issues=$SECURITY_ISSUES" >> $GITHUB_OUTPUT

          # Create summary
          cat > issue-summary.md << EOF
          # 🐛 Bug Detection Report

          ## Summary
          - **Linting Issues**: $LINT_ISSUES
          - **TypeScript Errors**: $TS_ISSUES
          - **Test Failures**: $TEST_FAILURES
          - **Security Vulnerabilities**: $SECURITY_ISSUES

          ## Details
          EOF

          if [ "$LINT_ISSUES" -gt 0 ]; then
            echo "### Linting Issues" >> issue-summary.md
            echo '```' >> issue-summary.md
            head -20 lint-results.txt >> issue-summary.md
            echo '```' >> issue-summary.md
          fi

          if [ "$TS_ISSUES" -gt 0 ]; then
            echo "### TypeScript Errors" >> issue-summary.md
            echo '```' >> issue-summary.md
            head -20 ts-errors.txt >> issue-summary.md
            echo '```' >> issue-summary.md
          fi

          if [ "$TEST_FAILURES" -gt 0 ]; then
            echo "### Test Failures" >> issue-summary.md
            echo '```' >> issue-summary.md
            head -20 test-results.txt >> issue-summary.md
            echo '```' >> issue-summary.md
          fi

          if [ "$SECURITY_ISSUES" -gt 0 ]; then
            echo "### Security Issues" >> issue-summary.md
            echo '```' >> issue-summary.md
            head -20 security-audit.txt >> issue-summary.md
            echo '```' >> issue-summary.md
          fi

      - name: Auto-fix simple issues
        if: steps.analyze.outputs.lint_issues > 0
        run: |
          echo "🔧 Attempting to auto-fix linting issues..."

          # Try to auto-fix ESLint issues
          npm run lint -- --fix || true

          # Format code with Prettier if available
          npx prettier --write "src/**/*.{ts,tsx,js,jsx}" || true

          # Check if fixes were applied
          if [ -n "$(git diff --name-only)" ]; then
            echo "✅ Auto-fixes applied to:"
            git diff --name-only
          else
            echo "ℹ️ No auto-fixable issues found"
          fi

      - name: Create GitHub Issue for complex bugs
        if: steps.analyze.outputs.ts_issues > 0 || steps.analyze.outputs.test_failures > 0 || steps.analyze.outputs.security_issues > 0
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issueSummary = fs.readFileSync('issue-summary.md', 'utf8');

            const title = `🐛 Automated Bug Detection Report - ${new Date().toISOString().split('T')[0]}`;
            const body = issueSummary + `

            ## 🔄 Next Steps
            - [ ] Review and prioritize issues
            - [ ] Fix TypeScript errors
            - [ ] Address test failures
            - [ ] Resolve security vulnerabilities

            ## 🤖 Auto-generated by BugBot
            This issue was automatically created by the bug detection workflow.
            `;

            // Check if similar issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'bug,automated'
            });

            const today = new Date().toISOString().split('T')[0];
            const existingIssue = issues.find(issue => 
              issue.title.includes(today) && issue.labels.some(label => label.name === 'automated')
            );

            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['bug', 'automated', 'priority-high']
              });
              console.log('✅ Created new bug report issue');
            } else {
              console.log('ℹ️ Similar issue already exists, updating...');
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: body
              });
            }

      - name: Commit auto-fixes
        if: steps.analyze.outputs.lint_issues > 0
        run: |
          if [ -n "$(git diff --name-only)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "🔧 Auto-fix: Resolve linting issues

            - Fixed ESLint warnings and errors
            - Applied code formatting
            - Auto-generated by BugBot workflow"
            
            git push
            echo "✅ Auto-fixes committed and pushed"
          fi

      - name: Upload issue reports
        uses: actions/upload-artifact@v4
        with:
          name: bug-reports-${{ github.run_number }}
          path: |
            issue-summary.md
            lint-results.txt
            ts-errors.txt
            test-results.txt
            security-audit.txt
